name: Validate Schemas

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validate schema syntax
      run: |
        echo "Validating JSON Schema syntax..."
        for schema in schemas/v0.1/*.json; do
          echo "Checking $schema"
          python -m json.tool "$schema" > /dev/null || exit 1
        done

    - name: Validate examples against schemas
      run: |
        if [ -f scripts/validate.py ]; then
          python scripts/validate.py
        else
          echo "Warning: validation script not yet implemented"
        fi

    - name: Check schema references
      run: |
        echo "Checking cross-schema references..."
        python -c "
import json
import os
from pathlib import Path

schemas_dir = Path('schemas/v0.1')
errors = []

for schema_file in schemas_dir.glob('*.json'):
    with open(schema_file) as f:
        try:
            schema = json.load(f)
            # Check for $ref validity
            if '\$ref' in str(schema):
                print(f'✓ {schema_file.name} contains references')
        except json.JSONDecodeError as e:
            errors.append(f'{schema_file.name}: {e}')

if errors:
    print('Errors found:')
    for error in errors:
        print(f'  ✗ {error}')
    exit(1)
else:
    print('All schemas valid!')
        "

    - name: Run pytest if available
      run: |
        if [ -d tests ]; then
          pytest tests/ -v
        else
          echo "No tests directory found, skipping pytest"
        fi

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black ruff mypy
    
    - name: Format check with black
      run: |
        if ls scripts/*.py 1> /dev/null 2>&1; then
          black --check scripts/
        else
          echo "No Python scripts found"
        fi
    
    - name: Lint with ruff
      run: |
        if ls scripts/*.py 1> /dev/null 2>&1; then
          ruff check scripts/
        else
          echo "No Python scripts found"
        fi

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  docs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check documentation files
      run: |
        required_docs=(
          "README.md"
          "LICENSE"
          "CONTRIBUTING.md"
        )
        
        for doc in "${required_docs[@]}"; do
          if [ ! -f "$doc" ]; then
            echo "Missing required documentation: $doc"
            exit 1
          fi
        done
        
        echo "All required documentation present!"
    
    - name: Check for broken links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        config-file: '.github/markdown-link-check-config.json'
      continue-on-error: true